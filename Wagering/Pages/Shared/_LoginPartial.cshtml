@using Microsoft.AspNetCore.Identity
@using Wagering.Models;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    string? returnUrl = null;
    var query = ViewContext.HttpContext.Request.Query;
    if (query.ContainsKey("returnUrl"))
    {
        returnUrl = query["returnUrl"];
    }
}

<div class="navbar-item">
    <div class="buttons">
@if (SignInManager.IsSignedIn(User))
{
        <a class="button is-secondary" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="/">
            <button type="submit" class="button is-danger">Logout</button>
        </form>
}
else
{
        <a class="button is-dark" asp-area="Identity" asp-page="/Account/Register" asp-route-returnUrl="@returnUrl">Register</a>
        <a class="button is-secondary" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@returnUrl">Login</a>
}
    </div>
</div>
